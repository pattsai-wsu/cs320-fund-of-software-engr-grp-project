@startuml
State Pass: do:\nshowing the result
State Failed: do:\nstops the user from proceeding
State Enterinput
state Negative_Binomial{
 Enterinput -down-> ValidData:needs checking
 ValidData -right-> checkIfValidInput
 Enterinput: do:\nreading input

 ValidData: check if:\n1. x, k and p are positive only\n2. x, k are integers, p can be either integer or decimal\n3. p is between 0 to 1\n4. k<=n\n5. x>=1
 checkIfValidInput: do:\n checking if x, k, p are numbers
 ValidData -down->Failed: invalid data
 checkIfValidInput -left->ValidData
 Failed -up->Enterinput:renter the input
 ValidData -down->Pass: valid data
}
@enduml

Description: This state diagram is describing negative binomial distribution, after the user entered the input, it's in the needing chekcing state to validate if all the data are correct,
we then check if they are 1. numbers only 
                          2. x, k and p are positive only
                          3. x, k are integers, p can be either integer or decimal
                          4. p is between 0 to 1
                          5  k<=n
                          6  x>=1
We calculate the result only when all the input data is valid, otherwise it will ask the user to renter the data if anything is incorrect.
